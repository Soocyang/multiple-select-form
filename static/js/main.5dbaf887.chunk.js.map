{"version":3,"sources":["FormSelection/FormSelectionComponent/FormCard.jsx","FormSelection/FormSelectionComponent/FormsListing.jsx","FormSelection/FormSelectionComponent/EditFormSelection.jsx","FormSelection/FormSelectionComponent/FormsSummary.jsx","FormSelection/FormSelectionComponent/JSONViewModal.jsx","FormSelection/FormSelection.jsx","images/bg-food.png","App.js","index.js"],"names":["FormCard","props","state","onCheck","bind","formValue","this","form","Col","md","lg","className","Card","onClick","value","Body","isCheck","label","Text","description","Component","FormsListing","formListing","Row","Accordion","activeKey","map","item","index","formGrpClass","isOpen","Toggle","as","Header","eventKey","onOpen","Collapse","Form","Check","type","id","checkAll","checked","onChange","setCheckAll","children","subitem","Footer","Button","setJsonList","handleShow","EditFormSelection","data","nodes","title","style","cursor","unCheckAll","elem","FormsSummary","filterSelectedForm","selectedFormsList","selectedForms","push","onReset","length","disabled","JSONViewModal","Modal","size","show","onHide","handleClose","animation","closeButton","Title","height","overflow","JSON","stringify","jsonListing","variant","FormSelection","formCategory","updatedFormList","setState","handleCheckbox","checkAllCount","onExpand","expanded","checkedForms","filteredFormList","filter","some","childElem","childItem","checkboxList","showCheckbox","formGrpValue","getFormsListLength","reduce","counter","showModal","formList","formListingData","onCheckbox","App","backgroundImage","background","backgroundPosition","backgroundRepeat","backgroundSize","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dbaf887.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\n\r\nexport class FormCard extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t\tthis.onCheck = this.onCheck.bind(this);\r\n\t}\r\n\r\n\tonCheck(formValue) {\r\n\t\tthis.props.onCheck({ formValue });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst form = this.props.form;\r\n\r\n\t\treturn (\r\n\t\t\t<Col md={6} lg={4} className=\"p-0 d-flex\">\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName={`m-1 flex-fill form-select-card sub-card bnm-card`}\r\n\t\t\t\t\tonClick={() => this.onCheck(form.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card.Body className={`${form.isCheck ? \"show\" : \"\"}`}>\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between align-middle\">\r\n\t\t\t\t\t\t\t<span className=\"font-weight-bold\">{form.label}</span>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<hr className=\"mt-1\" />\r\n\t\t\t\t\t\t<Card.Text>{form.description}</Card.Text>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName={`fas fa-lg fa-check-circle form-check-icon ${\r\n\t\t\t\t\t\t\t\tform.isCheck ? \"show\" : \"\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FormCard;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Accordion, Form, Button } from \"react-bootstrap\";\r\nimport FormCard from \"./FormCard.jsx\";\r\n\r\nexport class FormsListing extends Component {\r\n\trender() {\r\n\t\tconst formListing = this.props.formListing;\r\n\r\n\t\treturn (\r\n\t\t\t<Card className=\"bnm-card form-listing-card\">\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t<span className=\"h5 text-left font-weight-bold\">Ingredients</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr className=\"mt-1\" />\r\n\t\t\t\t\t<Row className=\"mx-2 p-1 form-list-accordion\">\r\n\t\t\t\t\t\t<Accordion activeKey={this.props.activeKey} className=\"w-100\">\r\n\t\t\t\t\t\t\t{formListing.map((item, index) => {\r\n\t\t\t\t\t\t\t\t//Update form group class\r\n\t\t\t\t\t\t\t\tlet formGrpClass = \"align-middle form-grp-header\";\r\n\t\t\t\t\t\t\t\tformGrpClass += item.isOpen ? \" form-grp-header-clicked\" : \"\";\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Card key={index} className=\"bnm-card sub-card\">\r\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\r\n\t\t\t\t\t\t\t\t\t\t\tas={Card.Header}\r\n\t\t\t\t\t\t\t\t\t\t\teventKey={item.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onOpen(item.value);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formGrpClass}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1} className=\"pr-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{item.value}.</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={10} className=\"pl-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-weight-bold\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.isOpen ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-lg fa-folder-open\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-lg fa-folder\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey={item.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Body className=\"form-grp-sub-card\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form className=\"pl-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"m-0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={item.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.checkAll\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Deselect all\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Select all\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={item.checkAll ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.setCheckAll(item.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row className=\"p-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.children.map((subitem) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormCard\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={subitem.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tform={subitem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCheck={this.props.onCheck}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></FormCard>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<hr className=\"m-0\" />\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<div className=\"d-flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.setJsonList(formListing);\r\n\t\t\t\t\t\t\t\t\tthis.props.handleShow();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tShow JSON\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FormsListing;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class EditFormSelection extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onCheck = this.onCheck.bind(this);\r\n\t}\r\n\r\n\tonCheck(formValue) {\r\n\t\tthis.props.onCheck({ formValue });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst data = this.props.nodes;\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"fa-ul\">\r\n\t\t\t\t{data.map((item) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={item.value}>\r\n\t\t\t\t\t\t\t<span className=\"fa-li\">\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\titem.checkAll\r\n\t\t\t\t\t\t\t\t\t\t\t? `fas fa-check-square`\r\n\t\t\t\t\t\t\t\t\t\t\t: `fas fa-minus-square`\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttitle=\"Remove All\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.unCheckAll(item.value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"edit-select-form-grp-label d-flex flex-row \"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.props.onOpen(item.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-folder mr-2 mt-1\"></i>\r\n\t\t\t\t\t\t\t\t<span>{item.value}. &nbsp;</span>\r\n\t\t\t\t\t\t\t\t<span>{item.label}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<ul className=\"fa-ul ml-4\">\r\n\t\t\t\t\t\t\t\t{item.children.map((elem) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li key={elem.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"fa-li\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"far fa-minus-square\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.onCheck(elem.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"edit-select-form-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onOpen(item.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{elem.label}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditFormSelection;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport EditFormSelection from \"./EditFormSelection.jsx\";\r\n\r\nexport class FormsSummary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.filterSelectedForm = this.filterSelectedForm.bind(this);\r\n\t}\r\n\r\n\tfilterSelectedForm = () => {\r\n\t\tconst selectedFormsList = this.props.selectedForms;\r\n\t\tconst formListing = [];\r\n\r\n\t\tselectedFormsList.map((item) => {\r\n\t\t\treturn item.children.map((elem) => {\r\n\t\t\t\treturn formListing.push({\r\n\t\t\t\t\tvalue: elem.value,\r\n\t\t\t\t\tlabel: elem.label,\r\n\t\t\t\t\tdescription: elem.description,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn formListing;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst selectedFormsList = this.props.selectedForms;\r\n\r\n\t\treturn (\r\n\t\t\t<Card className=\"bnm-card selected-form-card\">\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t<span className=\"h5 text-left font-weight-bold\">Selected Ingredients</span>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"pt-2 fas fa-lg fa-undo-alt icon-button rct-reset-btn\"\r\n\t\t\t\t\t\t\ttitle=\"Reset\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.onReset();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr className=\"mt-1\" />\r\n\t\t\t\t\t<div className=\"edit-form-selection\">\r\n\t\t\t\t\t\t{this.props.length() === 0 ? (\r\n\t\t\t\t\t\t\t<span>No ingredient selected...</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<EditFormSelection\r\n\t\t\t\t\t\t\t\tnodes={selectedFormsList}\r\n\t\t\t\t\t\t\t\tunCheckAll={this.props.unCheckAll}\r\n\t\t\t\t\t\t\t\tonCheck={this.props.onCheck}\r\n\t\t\t\t\t\t\t\tonOpen={this.props.onOpen}\r\n\t\t\t\t\t\t\t></EditFormSelection>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<hr className=\"m-0\" />\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<div className=\"d-flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<strong>Total selected: {this.props.length()}</strong>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.props.setJsonList(this.filterSelectedForm());\r\n\t\t\t\t\t\t\t\tthis.props.handleShow();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdisabled={selectedFormsList.length === 0 ? true : false}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FormsSummary;\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport default function JSONViewModal(props) {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal size=\"lg\" show={props.show} onHide={props.handleClose} animation={false}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>JSON View</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{ height: \"70vh\", overflow: \"auto\" }}>\r\n\t\t\t\t\t<pre className=\"bg-light\">{JSON.stringify(props.jsonListing, null, 2)}</pre>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={props.handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FormsListing from \"./FormSelectionComponent/FormsListing.jsx\";\r\nimport FormsSummary from \"./FormSelectionComponent/FormsSummary.jsx\";\r\nimport JSONViewModal from \"./FormSelectionComponent/JSONViewModal.jsx\";\r\n\r\nimport \"../../src/styles/formSelection.css\";\r\n// import FormDescription from \"./FormSelectionComponent/FormDescription.jsx\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport formListingData from \"./formsListing.json\";\r\n\r\nexport class FormSelection extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tformListing: [],\r\n\t\t\tselectedForms: [],\r\n\t\t\texpanded: [],\r\n\t\t\tactiveKey: \"\",\r\n\t\t\tshowModal: false,\r\n\t\t\tjsonListing: [],\r\n\t\t};\r\n\t\tthis.setCheckAll = this.setCheckAll.bind(this);\r\n\t\tthis.onCheck = this.onCheck.bind(this);\r\n\t\tthis.onOpen = this.onOpen.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onExpand = this.onExpand.bind(this);\r\n\t\tthis.onReset = this.onReset.bind(this);\r\n\t\tthis.handleCheckbox = this.handleCheckbox.bind(this);\r\n\t\tthis.getFormsListLength = this.getFormsListLength.bind(this);\r\n\t\tthis.handleShow = this.handleShow.bind(this);\r\n\t\tthis.handleClose = this.handleClose.bind(this);\r\n\t\tthis.setJsonList = this.setJsonList.bind(this);\r\n\t}\r\n\r\n\tsetCheckAll = (formCategory) => {\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//Upadate form isCheck\r\n\t\tconst updatedFormList = formsList.map((elem) => {\r\n\t\t\tif (elem.value === formCategory) {\r\n\t\t\t\tif (!elem.checkAll) {\r\n\t\t\t\t\telem.children.map((item) => {\r\n\t\t\t\t\t\titem.isCheck = true;\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\telem.checkAll = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem.children.map((item) => {\r\n\t\t\t\t\t\titem.isCheck = false;\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t\telem.checkAll = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\r\n\t\t// Pass formListing to form summary component\r\n\t\tthis.handleCheckbox(this.state.formListing);\r\n\t};\r\n\r\n\tunCheckAll = (formCategory) => {\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//Upadate form isCheck\r\n\t\tconst updatedFormList = formsList.map((elem) => {\r\n\t\t\tif (elem.value === formCategory) {\r\n\t\t\t\telem.children.map((item) => {\r\n\t\t\t\t\titem.isCheck = false;\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\t\t\t\telem.checkAll = false;\r\n\t\t\t}\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\r\n\t\t// Pass formListing to form summary component\r\n\t\tthis.handleCheckbox(this.state.formListing);\r\n\t};\r\n\r\n\tonCheck = (checked) => {\r\n\t\t// checkall counter\r\n\t\tlet formCategory = \"\";\r\n\t\tlet checkAllCount = 0;\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//Upadate form isCheck\r\n\t\tconst updateCheck = formsList.map((elem) => {\r\n\t\t\telem.children.map((item) => {\r\n\t\t\t\tif (item.value === checked.formValue) {\r\n\t\t\t\t\tformCategory = elem.value;\r\n\t\t\t\t\tif (item.isCheck) return (item.isCheck = false);\r\n\t\t\t\t\telse return (item.isCheck = true);\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\t//update check all\r\n\r\n\t\tconst updatedFormList = updateCheck.map((elem) => {\r\n\t\t\tif (elem.value === formCategory) {\r\n\t\t\t\telem.children.map((item) => {\r\n\t\t\t\t\tif (item.isCheck) checkAllCount++;\r\n\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (checkAllCount === elem.children.length) {\r\n\t\t\t\t\telem.checkAll = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem.checkAll = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\r\n\t\t// Pass formListing to form summary component\r\n\t\tthis.handleCheckbox(this.state.formListing);\r\n\t};\r\n\r\n\tonOpen = (formValue) => {\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//iterate each item in the form group ==> (If) the form value match update isOpen to true (Else) false/reset it\r\n\t\tconst updatedFormList = formsList.map((elem) => {\r\n\t\t\tif (elem.value === formValue) {\r\n\t\t\t\tif (elem.isOpen === true) {\r\n\t\t\t\t\telem.isOpen = false;\r\n\t\t\t\t\tthis.setState({ activeKey: \"\" });\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem.isOpen = true;\r\n\t\t\t\t\tthis.setState({ activeKey: elem.value });\r\n\t\t\t\t}\r\n\t\t\t} else elem.isOpen = false;\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\t};\r\n\r\n\tonClick = (formValue) => {\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//iterate each item in the form group ==> (If) the form value match update isOpen to true (Else) false/reset it\r\n\t\tconst updatedFormList = formsList.map((elem) => {\r\n\t\t\tif (elem.value === formValue) {\r\n\t\t\t\telem.isOpen = true;\r\n\t\t\t\tthis.setState({ activeKey: elem.value });\r\n\t\t\t} else elem.isOpen = false;\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\t};\r\n\r\n\tonExpand = (expanded) => {\r\n\t\tthis.setState({ expanded });\r\n\t};\r\n\r\n\tonReset = () => {\r\n\t\t//copy the state array to a temp array\r\n\t\tlet formsList = [...this.state.formListing];\r\n\r\n\t\t//Upadate form isCheck\r\n\t\tconst updatedFormList = formsList.map((elem) => {\r\n\t\t\telem.checkAll = false;\r\n\t\t\telem.children.map((item) => {\r\n\t\t\t\treturn (item.isCheck = false);\r\n\t\t\t});\r\n\t\t\treturn elem;\r\n\t\t});\r\n\r\n\t\tthis.setState({ formListing: updatedFormList });\r\n\r\n\t\t// Pass formListing to form summary component\r\n\t\tthis.handleCheckbox(this.state.formListing);\r\n\t};\r\n\r\n\thandleCheckbox = (checkedForms) => {\r\n\t\t// Filter selected forms\r\n\t\tconst filteredFormList = checkedForms\r\n\t\t\t.filter((item) => item.children.some((childElem) => childElem.isCheck === true))\r\n\t\t\t.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tchildren: item.children.filter((childItem) => childItem.isCheck === true),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// Hide all checkbox props for the checkbox tree\r\n\t\tconst checkboxList = filteredFormList.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tshowCheckbox: false,\r\n\t\t\t\tchildren: item.children.map((elem) => ({\r\n\t\t\t\t\t...elem,\r\n\t\t\t\t\tshowCheckbox: false,\r\n\t\t\t\t})),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t//set and extract form group to show expand when child selected\r\n\t\tconst formGrpValue = filteredFormList.map((item) => item.value);\r\n\r\n\t\t// Set all state\r\n\t\tthis.setState({ selectedForms: checkboxList });\r\n\t\tthis.setState({ expanded: formGrpValue });\r\n\t};\r\n\r\n\tgetFormsListLength = () => {\r\n\t\tconst tempFormsList = this.state.selectedForms;\r\n\r\n\t\tconst count = tempFormsList.reduce((counter, item) => {\r\n\t\t\tcounter += item.children.length;\r\n\t\t\treturn counter;\r\n\t\t}, 0);\r\n\r\n\t\treturn count;\r\n\t};\r\n\r\n\thandleClose = () => this.setState({ showModal: false, jsonListing: [] });\r\n\r\n\thandleShow = () => this.setState({ showModal: true });\r\n\r\n\tsetJsonList = (data) => this.setState({ jsonListing: data });\r\n\r\n\tcomponentDidMount() {\r\n\t\t//Init selection card open state and form check state to the orig form listing\r\n\r\n\t\tconst formList = formListingData.map((item) => ({\r\n\t\t\t...item,\r\n\t\t\tisOpen: false,\r\n\t\t\tcheckAll: false,\r\n\t\t\tchildren: item.children.map((elem) => ({\r\n\t\t\t\t...elem,\r\n\t\t\t\tisCheck: false,\r\n\t\t\t})),\r\n\t\t}));\r\n\r\n\t\tthis.setState({ formListing: formList });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { formListing, selectedForms, expanded, activeKey, showModal, jsonListing } =\r\n\t\t\tthis.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"form-selection\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={8} className=\"pr-0\">\r\n\t\t\t\t\t\t<FormsListing\r\n\t\t\t\t\t\t\tactiveKey={activeKey}\r\n\t\t\t\t\t\t\tsetCheckAll={this.setCheckAll}\r\n\t\t\t\t\t\t\tonCheckbox={this.handleCheckbox}\r\n\t\t\t\t\t\t\tonOpen={this.onOpen}\r\n\t\t\t\t\t\t\tonCheck={this.onCheck}\r\n\t\t\t\t\t\t\tformListing={formListing}\r\n\t\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\t\thandleShow={this.handleShow}\r\n\t\t\t\t\t\t\tsetJsonList={this.setJsonList}\r\n\t\t\t\t\t\t></FormsListing>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={4}>\r\n\t\t\t\t\t\t<FormsSummary\r\n\t\t\t\t\t\t\tselectedForms={selectedForms}\r\n\t\t\t\t\t\t\tlength={this.getFormsListLength}\r\n\t\t\t\t\t\t\texpanded={expanded}\r\n\t\t\t\t\t\t\tunCheckAll={this.unCheckAll}\r\n\t\t\t\t\t\t\tonCheck={this.onCheck}\r\n\t\t\t\t\t\t\tonOpen={this.onClick}\r\n\t\t\t\t\t\t\tonExpand={this.onExpand}\r\n\t\t\t\t\t\t\tonReset={this.onReset}\r\n\t\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\t\thandleShow={this.handleShow}\r\n\t\t\t\t\t\t\tsetJsonList={this.setJsonList}\r\n\t\t\t\t\t\t></FormsSummary>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<JSONViewModal\r\n\t\t\t\t\tjsonListing={jsonListing}\r\n\t\t\t\t\tshow={showModal}\r\n\t\t\t\t\thandleClose={this.handleClose}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FormSelection;\r\n","export default __webpack_public_path__ + \"static/media/bg-food.53daafae.png\";","import FormSelection from \"./FormSelection/FormSelection.jsx\";\nimport { Container } from \"react-bootstrap\";\nimport background from \"./images/bg-food.png\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\theight: \"100vh\",\n\t\t\t\t\tbackgroundImage: `url(${background})`,\n\t\t\t\t\tbackgroundPosition: \"center center\",\n\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<FormSelection></FormSelection>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css';\nimport '@fortawesome/fontawesome-free/css/solid.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}